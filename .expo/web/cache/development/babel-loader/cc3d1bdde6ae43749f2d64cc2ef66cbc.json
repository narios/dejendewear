{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Juan Rios\\\\Downloads\\\\expo-firebase-crud-master\\\\expo-firebase-crud-master\\\\screens\\\\CreateUserScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport firebase from \"../database/firebase\";\n\nvar AddUserScreen = function AddUserScreen(props) {\n  var initalState = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  var _useState = useState(initalState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleChangeText = function handleChangeText(value, name) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, value)));\n  };\n\n  var saveNewUser = function saveNewUser() {\n    return _regeneratorRuntime.async(function saveNewUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (state.name === \"\") {\n              alert(\"please provide a name\");\n            } else if (state.email === \"\") {\n              alert(\"please provide a email\");\n            } else if (state.password === \"\") {\n              alert(\"please provide a password\");\n            } else {\n              useEffect(function () {\n                firebase.db.collection(\"users\").onSnapshot(function (querySnapshot) {\n                  querySnapshot.docs.forEach(function (doc) {\n                    if (doc.data().name === \"javier\") {\n                      console.log(\"si Existe\");\n                    } else {\n                      try {\n                        firebase.db.collection(\"users\").add({\n                          name: state.name,\n                          email: state.email,\n                          password: state.password\n                        });\n                        props.navigation.navigate(\"UsersList\");\n                      } catch (error) {\n                        console.log(error);\n                      }\n                    }\n                  });\n                });\n              }, []);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Name\",\n    onChangeText: function onChangeText(value) {\n      return handleChangeText(value, \"name\");\n    },\n    value: state.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    multiline: true,\n    onChangeText: function onChangeText(value) {\n      return handleChangeText(value, \"email\");\n    },\n    value: state.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"password\",\n    onChangeText: function onChangeText(value) {\n      return handleChangeText(value, \"password\");\n    },\n    value: state.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Save User\",\n    onPress: function onPress() {\n      return saveNewUser();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 0,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#cccccc\"\n  },\n  loader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default AddUserScreen;","map":{"version":3,"sources":["C:/Users/Juan Rios/Downloads/expo-firebase-crud-master/expo-firebase-crud-master/screens/CreateUserScreen.js"],"names":["React","useState","useEffect","firebase","AddUserScreen","props","initalState","name","email","password","state","setState","handleChangeText","value","saveNewUser","alert","db","collection","onSnapshot","querySnapshot","docs","forEach","doc","data","console","log","add","navigation","navigate","error","styles","container","inputGroup","button","StyleSheet","create","flex","padding","marginBottom","borderBottomWidth","borderBottomColor","loader","left","right","top","bottom","position","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState , useEffect} from \"react\";\nimport {\n  Button,\n  View,\n  StyleSheet,\n  TextInput,\n  ScrollView,\n} from \"react-native\";\n\nimport firebase from \"../database/firebase\";\n\nconst AddUserScreen = (props) => {\n  const initalState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const [state, setState] = useState(initalState);\n\n  const handleChangeText = (value, name) => {\n    setState({ ...state, [name]: value });\n  };\n\n  const saveNewUser = async () => {\n    if (state.name === \"\") {\n      alert(\"please provide a name\");\n\n    }else if (state.email === \"\"){\n      alert(\"please provide a email\");\n\n    }else if (state.password === \"\"){\n      alert(\"please provide a password\");\n    } else {\n      useEffect(() => {\n      firebase.db.collection(\"users\").onSnapshot((querySnapshot) => {\n        querySnapshot.docs.forEach((doc) => {\n            if (doc.data().name === \"javier\"){\n              console.log(\"si Existe\")\n            }else{\n              try {\n                //await \n                firebase.db.collection(\"users\").add({\n                  name: state.name,\n                  email: state.email,\n                  password: state.password,\n                });\n      \n                props.navigation.navigate(\"UsersList\");\n              } catch (error) {\n                console.log(error)\n              }\n            }\n        });\n      });\n      }, []);\n        \n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* Name Input */}\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"Name\"\n          onChangeText={(value) => handleChangeText(value, \"name\")}\n          value={state.name}\n        />\n      </View>\n\n      {/* Email Input */}\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"Email\"\n          multiline={true}\n          onChangeText={(value) => handleChangeText(value, \"email\")}\n          value={state.email}\n        />\n      </View>\n\n      {/* Input */}\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"password\"\n          onChangeText={(value) => handleChangeText(value, \"password\")}\n          value={state.password}\n        />\n      </View>\n\n      <View style={styles.button}>\n        <Button title=\"Save User\" onPress={() => saveNewUser()} />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35,\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 0,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#cccccc\",\n  },\n  loader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default AddUserScreen;\n"]},"metadata":{},"sourceType":"module"}